version: "3"

services:
  # MinIO services.
  minio-server:
    image: minio/minio
    container_name: minio-server
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: server --console-address ":9001" /data

  create-bucket:
    image: minio/mc
    container_name: create-bucket
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - minio-server
    entrypoint:
      /bin/sh -c "
      /usr/bin/mc config host add modelardata-minio http://minio-server:9000 minioadmin minioadmin;
      /usr/bin/mc mb modelardata-minio/modelardata;
      exit 0;
      "

  # Metadata database service.
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: metadata

  # ModelarDB services.
  modelardb-manager:
    container_name: modelardb-manager
    build: ModelarDB-RS/.
    command: ["target/release/modelardbm", "metadata", "s3://modelardata"]
    ports:
      - "9998:9998"
    environment:
      METADATA_DB_HOST: postgres
      METADATA_DB_PASSWORD: password
      METADATA_DB_USER: postgres
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_DEFAULT_REGION: eu-central-1
      AWS_ENDPOINT: http://minio-server:9000
      AWS_ALLOW_HTTP: "true"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - minio-server
      - create-bucket
      - postgres

  modelardb-edge:
    container_name: modelardb-edge
    build: ModelarDB-RS/.
    command: ["target/release/modelardbd", "edge", "data/edge", "grpc://modelardb-manager:9998"]
    ports:
      - "9999:9999"
    environment:
      MODELARDBD_UNCOMPRESSED_DATA_BUFFER_CAPACITY: 640
      MODELARDBD_COMPRESSED_RESERVED_MEMORY_IN_BYTES: 10000
      MODELARDBD_TRANSFER_BATCH_SIZE_IN_BYTES: 10000
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: on-failure:10
    depends_on:
      - modelardb-manager
    volumes:
      - ./data/edge:/usr/src/app/data/edge

  modelardb-cloud:
    container_name: modelardb-cloud
    build: ModelarDB-RS/.
    command: [ "target/release/modelardbd", "cloud", "data/cloud", "grpc://modelardb-manager:9998"]
    ports:
      - "9997:9997"
    environment:
      MODELARDBD_PORT: 9997
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: on-failure:10
    depends_on:
      - modelardb-manager
      - modelardb-edge
    volumes:
      - ./data/cloud:/usr/src/app/data/cloud

  # Utility service used to create the table in ModelarDB after startup.
  create-table:
    container_name: create-table
    build: .
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - modelardb-manager
      - modelardb-edge
      - modelardb-cloud

  # Utility service used to build the binary for the output plugin.
  output-plugin-builder:
    container_name: output-plugin-builder
    build: telegraf/.
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - binary:/binary

  # Telegraf server used to ingest MQTT data into the edge node.
  telegraf:
    image: telegraf
    container_name: telegraf
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - ./telegraf/sample.conf:/etc/telegraf/sample.conf
      - ./telegraf/message.proto:/etc/telegraf/message.proto
      - binary:/etc/telegraf
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - output-plugin-builder
      - modelardb-manager
      - modelardb-edge
      - modelardb-cloud

volumes:
  binary:
